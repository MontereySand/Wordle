Recognized Methods
===================
Jinternalframe
Jlabel
JTree.EmptySelectionModel - might want this to not let the user have weird higlighting issues with the images, not sure where to implement but good to note down

Aditya // 
These are a list of the most popular java swing methods
I deleted ones that we def don't need
I sorted some of these out and added annotations to some that i think will help us, in no meeaningful order and i skipped annotating obvious ones, i'll fix this later
===================
JButton	
    An implementation of a "push" button.
JCheckBox	
    An implementation of a check box -- an item that can be selected or deselected, and which displays its state to the user.
JColorChooser	
    JColorChooser provides a pane of controls designed to allow a user to manipulate and select a color.
JComponent	
    The base class for all Swing components except top-level containers.
JDialog	
    The main class for creating a dialog window.
JEditorPane	
    A text component to edit various kinds of content.
JFileChooser	
    JFileChooser provides a simple mechanism for the user to choose a file.
JFormattedTextField	**
    JFormattedTextField extends JTextField adding support for formatting arbitrary values, as well as retrieving a particular object once the user has edited the text.
JFrame
    An extended version of java.awt.Frame that adds support for the JFC/Swing component architecture.
JInternalFrame	
    A lightweight object that provides many of the features of a native frame, including dragging, closing, becoming an icon, resizing, title display, and support for a menu bar.
JLabel **
    A display area for a short text string or an image, or both.
JLayeredPane	
    JLayeredPane adds depth to a JFC/Swing container, allowing components to overlap each other when needed.
JList<E>	
    A component that displays a list of objects and allows the user to select one or more items.
JList.DropLocation	
    A subclass of TransferHandler.DropLocation representing a drop location for a JList.
JOptionPane	
    JOptionPane makes it easy to pop up a standard dialog box that prompts users for a value or informs them of something.
JPanel	
    JPanel is a generic lightweight container.
JPasswordField	** might be needed for a hard mode, also since all of this is modular, we can put in any "hard mode" in any combination, allowing the user to choose
    JPasswordField is a lightweight component that allows the editing of a single line of text where the view indicates something was typed, but does not show the original characters.
JProgressBar**
    A component that visually displays the progress of some task.
JRadioButton ** i saw some pictures of this on google, this might be useful for emoji mode
    An implementation of a radio button -- an item that can be selected or deselected, and which displays its state to the user.
JRootPane	
    A lightweight container used behind the scenes by JFrame, JDialog, JWindow, JApplet, and JInternalFrame.
JSeparator	** can this be used to hide and cut up photos in a way?
    JSeparator provides a general purpose component for implementing divider lines - most commonly used as a divider between menu items that breaks them up into logical groupings.
JSlider	** might help with colors being a color picker
    A component that lets the user graphically select a value by sliding a knob within a bounded interval.
JTabbedPane	
    A component that lets the user switch between a group of components by clicking on a tab with a given title and/or icon.
JTable ** core??	
    The JTable is used to display and edit regular two-dimensional tables of cells.
JTable.DropLocation	
    A subclass of TransferHandler.DropLocation representing a drop location for a JTable.
JTextArea	
    A JTextArea is a multi-line area that displays plain text.
JTextField	
    JTextField is a lightweight component that allows the editing of a single line of text.
JTextPane // reading the line under this, what does graphically mean?
    A text component that can be marked up with attributes that are represented graphically.
JToggleButton	
    An implementation of a two-state button.
JToggleButton.ToggleButtonModel	
    The ToggleButton model
JViewport	
    The "viewport" or "porthole" through which you see the underlying information.
JWindow	
    A JWindow is a container that can be displayed anywhere on the user's desktop.